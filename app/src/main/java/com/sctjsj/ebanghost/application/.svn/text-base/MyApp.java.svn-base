package com.sctjsj.ebanghost.application;

import android.app.Activity;
import android.app.Application;
import android.content.SharedPreferences;
import android.text.TextUtils;
import android.util.Log;

import com.google.gson.Gson;
import com.sctjsj.ebanghost.bean.UserBean;
import com.sctjsj.ebanghost.url.BnUrl;
import com.sctjsj.ebanghost.util.SessionUtil;

import org.json.JSONException;
import org.json.JSONObject;
import org.xutils.common.Callback;
import org.xutils.http.RequestParams;
import org.xutils.x;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Chris-Jason on 2016/10/31.
 */
public class MyApp extends Application {

    private String TAG="MyApp";
    private SharedPreferences spf;

    private List<Activity> activityList=new ArrayList<>();


    @Override
    public void onCreate() {
        super.onCreate();

        //初始化 xUtils
        x.Ext.init(this);


    }

    /**
     *保存当前登录的用户信息到本地
     * @param ub
     */
    public void saveCurrentUser(UserBean ub){
        spf=getSharedPreferences("SYSTEM",MODE_PRIVATE);
        String userJson=new Gson().toJson(ub);
        spf.edit().putString("user",userJson).commit();
        //Log.e(TAG,"saveCurrentUser:"+userJson);
    }

    /**
     * 获取当前登录的用户
     * @return
     */
    public UserBean getCurrentUser(){
        spf=getSharedPreferences("SYSTEM",MODE_PRIVATE);
        UserBean ub=new UserBean();
        String userJson=spf.getString("user","none");
       // Log.e(TAG,"getCurrentUser:"+userJson);
        //取出保存的用户信息
        if(userJson!=null && !"null".equals(userJson)&& !"none".equals(userJson)){
            try {
                JSONObject jsonObject=new JSONObject(userJson);
                ub.setUserId(jsonObject.getInt("userId"));
                ub.setAccount(jsonObject.getString("account"));
                ub.setPwd(jsonObject.getString("pwd"));
                ub.setShopId(jsonObject.getInt("shopId"));
                ub.setShopType(jsonObject.getInt("shopType"));
            } catch (JSONException e) {
                e.printStackTrace();
            }

            return ub;
        }else{
            return null;
        }

    }

    /**
     *获取 SPF
     * @return
     */
    public SharedPreferences getSpf() {
        spf=getSharedPreferences("SYSTEM",MODE_PRIVATE);
        return spf;
    }

    /**
     * 添加
     * @param activity
     */
    public  void addActivity(Activity activity){
        activityList.add(activity);
    }

    /**
     * 移除
     * @param activity
     */
    public  void removeActivity(Activity activity){
        if(activityList.contains(activity)){
            activityList.remove(activity);
            activity.finish();
        }
    }

    /**
     * 结束所有 Activity
     */
    public  void finishAllActivity(){
        for(Activity ac:activityList){
            if(!ac.isFinishing()){
                ac.finish();
            }
        }
        saveCurrentUser(null);
        //杀死该应用进程
        android.os.Process.killProcess(android.os.Process.myPid());

    }


}
